1
00:00:00,240 --> 00:00:00,600
Okay.

2
00:00:00,600 --> 00:00:06,360
So now that we know what repositories are in general, let's learn how we instantiate a new repo using

3
00:00:06,360 --> 00:00:06,910
Git.

4
00:00:06,930 --> 00:00:12,000
And before I show you that command, I'm actually going to show you a separate, very simple command

5
00:00:12,000 --> 00:00:13,440
called git status.

6
00:00:13,470 --> 00:00:20,220
Git status will come up again and again in this course and just in your life, if you use Git, it's

7
00:00:20,220 --> 00:00:25,350
a harmless command to just reports back to you the status in your current repository.

8
00:00:25,380 --> 00:00:30,390
The thing is, we don't have any repositories yet, or at least if you're following along, we haven't

9
00:00:30,390 --> 00:00:31,090
made any.

10
00:00:31,110 --> 00:00:39,330
So if I run git status anywhere on my machine, assuming I don't have any repos, I get this message

11
00:00:39,330 --> 00:00:39,900
fatal.

12
00:00:39,900 --> 00:00:41,720
Not a get repository.

13
00:00:41,730 --> 00:00:47,190
It's telling me you're not in a git repo so it's aware of what git is.

14
00:00:47,190 --> 00:00:49,870
It's not giving me like command not found.

15
00:00:49,890 --> 00:00:50,700
It's telling me.

16
00:00:50,700 --> 00:00:51,810
Yeah, I know.

17
00:00:51,810 --> 00:01:00,680
But you're not in a repo versus if I am in a git repo and I run git status, we see something different.

18
00:01:00,690 --> 00:01:04,620
Now what we see varies and that's why we use git status.

19
00:01:04,620 --> 00:01:09,360
It reports back to us and gives us information on the current repo we're in.

20
00:01:09,510 --> 00:01:13,910
So we'll use it all the time, but for now it's just proof that we're not in a repo.

21
00:01:13,920 --> 00:01:17,430
But now we're going to learn our second command which is git init.

22
00:01:17,430 --> 00:01:22,980
So this will initialize a new repository wherever we are in our terminal.

23
00:01:22,980 --> 00:01:28,820
So whatever directory I'm inside of will become the home of a new git repository.

24
00:01:28,830 --> 00:01:34,560
So it's the equivalent of what this slide showed or these diagrams where we have some folder and we

25
00:01:34,560 --> 00:01:39,180
initialize a repo inside of those folders, we navigate to the folder.

26
00:01:39,180 --> 00:01:42,810
So in my case, I have an empty folder called Basics.

27
00:01:42,810 --> 00:01:45,840
I'll have different folders for different parts of the course.

28
00:01:45,840 --> 00:01:52,020
I'm going to make a new directory, let's say I'm writing a novel, so I'm going to go with my first

29
00:01:52,020 --> 00:01:56,220
novel and then I'm going to navigate into there.

30
00:01:56,670 --> 00:01:58,800
This is where I want my git repository.

31
00:01:59,010 --> 00:01:59,760
Repository.

32
00:01:59,760 --> 00:02:04,620
I want to have a new repo in my first novel so I can track the history, you know, the drafts, the

33
00:02:04,620 --> 00:02:11,460
changes I make, all of that stuff inside of this project and then I'm going to run, get and knit before

34
00:02:11,490 --> 00:02:11,760
that.

35
00:02:11,760 --> 00:02:18,990
Just to remind you, currently not a repository when I ran that command to get status now I run git

36
00:02:18,990 --> 00:02:25,650
init and it tells me it initialized an empty git repository in and then it gives me the whole path to

37
00:02:25,650 --> 00:02:26,250
where I am.

38
00:02:26,250 --> 00:02:27,720
My first novel.

39
00:02:28,110 --> 00:02:29,760
Now I don't see anything here.

40
00:02:30,180 --> 00:02:33,030
We'll talk about what actually happens in the next video.

41
00:02:33,060 --> 00:02:34,440
There is something here.

42
00:02:34,440 --> 00:02:36,990
It's hidden and it's where git is stored.

43
00:02:36,990 --> 00:02:40,770
But before that, I just want to recap what we've seen so far.

44
00:02:40,800 --> 00:02:48,060
The command get init will instantiate a new git repository for us wherever we are, whatever directory

45
00:02:48,060 --> 00:02:52,410
we're currently in in our terminal where we run that command also.

46
00:02:52,410 --> 00:02:58,170
This is something we run one time per project so we're not constantly initializing if we're working

47
00:02:58,170 --> 00:02:59,910
on the same project day after day.

48
00:02:59,910 --> 00:03:05,760
If I'm working on this novel for a couple of months or years, if more like my speed probably occurs,

49
00:03:06,660 --> 00:03:09,240
we would run git init one time.

50
00:03:09,270 --> 00:03:16,050
Get init just enables git in this one project and then we just use that same repository day after day.

51
00:03:16,050 --> 00:03:17,010
That's kind of the point.

52
00:03:17,010 --> 00:03:19,860
We want that continued history anyway.

53
00:03:20,160 --> 00:03:21,960
Now if I run git status.

54
00:03:22,850 --> 00:03:24,470
We see something different.

55
00:03:24,470 --> 00:03:27,210
So before not in a repository.

56
00:03:27,230 --> 00:03:29,240
Then we initialize get in it.

57
00:03:29,420 --> 00:03:30,800
Now get status.

58
00:03:30,830 --> 00:03:31,880
Gives me something else.

59
00:03:31,880 --> 00:03:36,230
There's a lot of stuff in here we don't know about at this point in time, but we'll make sense of it

60
00:03:36,230 --> 00:03:36,860
soon.

61
00:03:37,370 --> 00:03:43,940
But it's just proof that something git ish is happening, right instead of this message, not a git

62
00:03:43,940 --> 00:03:44,540
repo.

63
00:03:45,230 --> 00:03:49,040
Next up, we're going to talk about what actually happens when I run git in it.

64
00:03:49,040 --> 00:03:53,150
Where is the git folder or files or what information does it create?

65
00:03:53,150 --> 00:03:54,020
I don't see anything.

