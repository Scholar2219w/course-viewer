1
00:00:00,270 --> 00:00:00,680
Okay.

2
00:00:00,690 --> 00:00:02,880
So it's time to get some practice with git diff.

3
00:00:02,910 --> 00:00:07,230
There are two very important announcements or notes about this exercise up front.

4
00:00:07,230 --> 00:00:13,020
First of all, this exercise actually involves an existing repository that you're going to download.

5
00:00:13,020 --> 00:00:15,510
So stay tuned for those instructions in just a moment.

6
00:00:15,510 --> 00:00:21,180
And second, the other important note is that all these different variations that I'm asking you to

7
00:00:21,180 --> 00:00:26,610
use in these these different steps here, you may not remember them all off the top of your head.

8
00:00:26,610 --> 00:00:28,560
I wouldn't blame you if you don't.

9
00:00:28,560 --> 00:00:32,910
So don't feel like we've talked about adding and committing and branching.

10
00:00:32,910 --> 00:00:36,450
Those are like fundamental things you do day to day defying.

11
00:00:36,450 --> 00:00:40,650
You may do frequently, but maybe not every flavor of git diff.

12
00:00:40,650 --> 00:00:44,790
So I would say it's just not as crucial if you struggle to remember some of these.

13
00:00:44,790 --> 00:00:47,970
I wouldn't feel bad, but make sure you can get the answers.

14
00:00:47,970 --> 00:00:50,760
Make sure you understand what command does what.

15
00:00:50,760 --> 00:00:55,260
Even if you can't recall it instantly, it's fine to look things up anyway.

16
00:00:55,740 --> 00:00:59,640
Like all the other exercises, there's a link in the resources for this video.

17
00:01:00,180 --> 00:01:05,550
I definitely recommend you open it up because in order to get started with this project, with this

18
00:01:05,790 --> 00:01:10,260
exercise, it's not really a project you're going to need to do something we have not yet seen.

19
00:01:10,260 --> 00:01:12,330
This is actually skipping ahead.

20
00:01:12,480 --> 00:01:17,370
We're going to learn about a get command once we get to GitHub called Get Clone.

21
00:01:17,370 --> 00:01:22,830
So all that I'll say about it for now is that as part of the setup for this exercise, you need to copy

22
00:01:22,830 --> 00:01:24,960
this link or copy this entire line.

23
00:01:24,960 --> 00:01:30,030
So I'm going to do that right now, and then we're going to run this from our terminal and we're going

24
00:01:30,030 --> 00:01:34,740
to make sure we're not in a git repository when we do this, because this is actually going to make

25
00:01:34,740 --> 00:01:37,110
a copy of a git repo that I've made.

26
00:01:37,110 --> 00:01:39,390
It's going to make a copy for you on your machine.

27
00:01:39,660 --> 00:01:41,430
So let's try it.

28
00:01:42,210 --> 00:01:43,380
I'll do it right here.

29
00:01:43,380 --> 00:01:47,310
So I'm not in a get repository right now and I'm going to run this command.

30
00:01:47,310 --> 00:01:48,450
I just copied it.

31
00:01:48,570 --> 00:01:50,700
I don't want those when I copied it.

32
00:01:50,700 --> 00:01:53,000
I don't want the little marks there.

33
00:01:53,580 --> 00:01:55,110
So now I'm going to hit Enter.

34
00:01:56,720 --> 00:01:59,480
And we get this output from Git again.

35
00:01:59,480 --> 00:02:04,670
We're going to learn about this command later, but I now have a new folder called Git diff exercise.

36
00:02:04,790 --> 00:02:06,770
So now I'm going to seed into that.

37
00:02:06,800 --> 00:02:09,289
That's the next step change into that directory.

38
00:02:10,009 --> 00:02:14,570
So seed and to get diff exercise and you'll see two files in here.

39
00:02:14,870 --> 00:02:19,100
So I can open this code dot.

40
00:02:19,100 --> 00:02:21,470
Just open it in vs code and here we go.

41
00:02:21,470 --> 00:02:28,310
We have two files, one for Fleetwood Mac, txt van, Fleetwood Mac and then another one for Queen,

42
00:02:28,310 --> 00:02:29,240
the band Queen.

43
00:02:29,450 --> 00:02:33,230
Now the way that this exercise works is that there are actually two branches.

44
00:02:33,230 --> 00:02:36,440
The current branch that you're on by default is called current.

45
00:02:36,470 --> 00:02:42,480
Now I recognize it's kind of confusing, but I meant is that this is the branch for the current lineup's,

46
00:02:42,500 --> 00:02:46,490
the modern 2021, 2022 lineups of these bands.

47
00:02:47,210 --> 00:02:52,860
But there's a second branch that I've made already and you can access it by running this command.

48
00:02:52,880 --> 00:02:55,070
Get switch 1970s.

49
00:02:55,070 --> 00:02:56,390
So I'll do that now.

50
00:02:57,860 --> 00:02:59,060
And it is kind of weird.

51
00:02:59,060 --> 00:03:02,210
You're not going to see this branch, which is why I'm having you run this.

52
00:03:02,210 --> 00:03:05,960
If you run git branch, we don't see a second branch, we will learn why that is.

53
00:03:05,960 --> 00:03:09,500
So I'm not going to go into that until we get to GitHub and remote branches.

54
00:03:09,500 --> 00:03:11,660
But anyway, just follow these steps blindly.

55
00:03:11,660 --> 00:03:13,220
It's okay, we will learn.

56
00:03:13,460 --> 00:03:17,320
So now I have two branches, 1970s and current.

57
00:03:17,330 --> 00:03:19,500
I made both of those ahead of time for you.

58
00:03:19,520 --> 00:03:22,190
Now you have them on your machine if you follow these steps.

59
00:03:22,640 --> 00:03:26,870
So if we look at the 1970s branch, that's what I'm on right now.

60
00:03:27,530 --> 00:03:28,910
We have some slight changes.

61
00:03:28,910 --> 00:03:32,510
For example, the queen file now has Freddie Mercury as its singer.

62
00:03:33,230 --> 00:03:35,000
Fleetwood Mac has a different lineup.

63
00:03:35,000 --> 00:03:37,920
No keyboardist back in 1970.

64
00:03:37,940 --> 00:03:40,790
Now, this band, Fleetwood Mac, has had like a million lineup changes.

65
00:03:40,790 --> 00:03:43,400
And this is not entirely faithful.

66
00:03:43,400 --> 00:03:47,030
But the point is that there's two versions of each file two branches.

67
00:03:47,450 --> 00:03:50,540
Each branch has the same two file names, but different contents.

68
00:03:50,930 --> 00:03:57,170
So now that we have that setup, we now have our diffs, the actual exercise portion.

69
00:03:57,590 --> 00:04:03,530
So there are a bunch of steps where I'm asking you to make different comparisons between the 1970s branch

70
00:04:03,530 --> 00:04:08,720
and the current branch for all files between the 1970s branch and the current branch, but only for

71
00:04:08,750 --> 00:04:10,520
the Queen text file.

72
00:04:10,880 --> 00:04:13,550
Or switch over to this current branch.

73
00:04:13,550 --> 00:04:18,149
That's the name of it and run a diff to compare the current head to the previous commit.

74
00:04:18,170 --> 00:04:20,959
Basically there's a bunch of diffs I'm asking you to run.

75
00:04:20,959 --> 00:04:23,600
Everyone will involve a flavor of git diff.

76
00:04:24,020 --> 00:04:27,800
Now towards the end I actually ask you to make some changes to a file.

77
00:04:27,950 --> 00:04:30,170
Follow these directions pretty carefully.

78
00:04:30,710 --> 00:04:35,770
For example, here, I'm telling you to replace Adam Lambert's name with your own name.

79
00:04:35,780 --> 00:04:38,660
Save the change, add to the staging area.

80
00:04:38,660 --> 00:04:41,150
So add that change, but do not commit.

81
00:04:41,330 --> 00:04:47,270
So that sort of thing is important because it enables us to run different diffs where some changes are

82
00:04:47,270 --> 00:04:51,290
staged, some are not staged and some are committed anyway.

83
00:04:51,320 --> 00:04:52,850
Follow these instructions if you'd like.

84
00:04:52,850 --> 00:04:54,320
I hope you do this exercise.

85
00:04:54,560 --> 00:04:59,270
We're going to make some comparisons between the different band lineups over the years and stop watching

86
00:04:59,270 --> 00:05:02,060
at this point because I'm now just going to go through it myself.

87
00:05:02,420 --> 00:05:03,830
So I did part one.

88
00:05:04,340 --> 00:05:07,460
I have this repository, I have these two branches, right?

89
00:05:07,940 --> 00:05:09,500
1970s in current.

90
00:05:09,650 --> 00:05:16,490
Now the first exercise, the first problem is to compare the difference between the 1970s branch and

91
00:05:16,490 --> 00:05:19,640
the current branch across all files.

92
00:05:19,650 --> 00:05:24,680
So I can do that with git diff and then just two branch names.

93
00:05:24,830 --> 00:05:27,590
So I didn't specify which one you should compare.

94
00:05:27,590 --> 00:05:34,190
First, remember that the order matters, but I'll just say 1970s compared to now chronologically that

95
00:05:34,190 --> 00:05:35,570
makes more sense because.

96
00:05:35,570 --> 00:05:37,010
Well, let me just show you.

97
00:05:37,250 --> 00:05:43,550
We see, for example, what's changed like currently in Fleetwood Mac.

98
00:05:43,580 --> 00:05:48,980
Lindsey Buckingham is no longer part of the band, sadly, and he's been replaced.

99
00:05:48,980 --> 00:05:51,260
So this format makes sense in my opinion.

100
00:05:51,260 --> 00:05:57,140
Where we have the old is the actual chronologically older branch and the new is the current branch,

101
00:05:57,140 --> 00:05:58,040
but it doesn't matter.

102
00:05:58,040 --> 00:06:02,390
So we also see keyboard was set to none on the 1970s.

103
00:06:02,390 --> 00:06:07,610
Branch There was no keyboard player and now in the current branch it's Christine McVie.

104
00:06:08,150 --> 00:06:10,520
And we also see the changes in the Queen file.

105
00:06:10,880 --> 00:06:16,850
Now the second part of the exercise is to do the same thing, but only for the Queen txt file.

106
00:06:16,850 --> 00:06:18,950
So still compare the two branches.

107
00:06:19,460 --> 00:06:24,290
But I can narrow it down just like that as a third value.

108
00:06:24,320 --> 00:06:27,100
Just give me that one file and here we are.

109
00:06:27,110 --> 00:06:28,210
What's changed?

110
00:06:28,220 --> 00:06:31,580
Well, Freddie Mercury exists in the 1970s branch.

111
00:06:31,580 --> 00:06:33,350
Adam Lambert is in the current branch.

112
00:06:33,350 --> 00:06:35,180
Mike GROSS is in the 1970s branch.

113
00:06:35,180 --> 00:06:38,840
And Neil Fairclough, I don't know.

114
00:06:38,840 --> 00:06:42,140
He's a new addition to the band, actually.

115
00:06:42,140 --> 00:06:42,950
What's his name?

116
00:06:42,950 --> 00:06:44,930
Roger Deacon, I think was his name.

117
00:06:44,930 --> 00:06:47,150
What's the real the main basis of the band.

118
00:06:47,150 --> 00:06:48,920
But he's actually not part of it anymore.

119
00:06:49,310 --> 00:06:53,030
So he kind of got lost between 1970s and 2021.

120
00:06:53,630 --> 00:06:55,970
But we don't have a middle branch anyway.

121
00:06:55,970 --> 00:06:56,240
Next.

122
00:06:56,320 --> 00:06:56,950
Step.

123
00:06:57,430 --> 00:07:01,060
Step three, switch over to the current branch if you're not on it currently.

124
00:07:01,480 --> 00:07:02,580
So I'll do that.

125
00:07:02,590 --> 00:07:10,030
I'm on the 1970s branch get switch to current and then it says run a diff to compare the current head

126
00:07:10,030 --> 00:07:11,730
to the previous commit.

127
00:07:11,740 --> 00:07:18,400
Basically if we do a git log, I want to see what happened between where we are right now.

128
00:07:18,400 --> 00:07:20,890
This is head and this commit.

129
00:07:20,890 --> 00:07:22,480
So there are multiple ways of doing this.

130
00:07:22,480 --> 00:07:28,570
I mean, I could copy these commit hashes and do a diff between them or I could just say what's the

131
00:07:28,570 --> 00:07:29,020
difference?

132
00:07:29,020 --> 00:07:38,800
So get diff between head and then the prior commit the parent of head head tilde one and this is what

133
00:07:38,800 --> 00:07:42,730
changed in that commit I changed the basis.

134
00:07:42,730 --> 00:07:44,380
John Deacon I think I said.

135
00:07:44,380 --> 00:07:48,280
Roger Deacon It's John Deacon anyway, I updated him.

136
00:07:48,280 --> 00:07:51,160
He left the band and was replaced by this guy.

137
00:07:51,580 --> 00:07:55,540
So the way that I've written this right now is that we're looking at head compared to head.

138
00:07:55,540 --> 00:08:04,090
Tilde one I would probably do it this way instead like this so that we can see what was added in the

139
00:08:04,090 --> 00:08:05,980
newest commit and what was removed.

140
00:08:05,980 --> 00:08:06,400
Right?

141
00:08:06,400 --> 00:08:07,600
It's the same change.

142
00:08:07,630 --> 00:08:13,810
It's just the order was slightly different, but you could also get that commit hash, as I mentioned,

143
00:08:13,810 --> 00:08:18,850
so we could just copy part of that hash or the whole thing and do a get diff compared to that.

144
00:08:19,090 --> 00:08:21,190
So this is the same thing as this.

145
00:08:22,190 --> 00:08:24,420
And then here we're just flipping the order.

146
00:08:24,440 --> 00:08:29,870
So this is comparing head tilted one to head and this is comparing head to head till day one.

147
00:08:29,870 --> 00:08:37,880
So the new commit to the parent or the parent commit to the child the next step while on the current

148
00:08:37,880 --> 00:08:43,070
branch change the queen txt file by replacing Adam Lambert with your own name.

149
00:08:43,070 --> 00:08:44,210
Save the change.

150
00:08:44,210 --> 00:08:46,160
Add that file to the staging area.

151
00:08:46,190 --> 00:08:48,740
Do not commit OC.

152
00:08:48,860 --> 00:08:50,170
So let's try that.

153
00:08:50,180 --> 00:08:50,930
I'm going to change.

154
00:08:50,930 --> 00:08:51,830
Adam Lambert.

155
00:08:52,920 --> 00:08:54,180
And put my own name.

156
00:08:54,210 --> 00:08:55,020
Cold steel.

157
00:08:55,020 --> 00:08:56,220
And I'm going to save.

158
00:08:57,120 --> 00:09:02,970
And then I will just run, get status, I will add that file, I'll stage it like the instructions say,

159
00:09:02,970 --> 00:09:07,860
but I'm not going to commit now.

160
00:09:07,860 --> 00:09:12,510
Edit The Fleetwood Mac File Changing the lead singer from Stevie Nicks to Stevie Nicks.

161
00:09:12,690 --> 00:09:17,790
One of my chickens is Stevie Nicks, so we'll save that file, but we're not going to stage it.

162
00:09:18,330 --> 00:09:24,360
So Stevie Nicks becomes Stevie Nicks and I saved it, but I'm not going to stage that.

163
00:09:25,230 --> 00:09:25,860
Okay.

164
00:09:26,340 --> 00:09:28,630
Now we get to do some more diffs.

165
00:09:28,650 --> 00:09:32,760
Run a diff that reveals the unstaged changes in the working directory.

166
00:09:32,760 --> 00:09:37,110
So I should only see the change that we made to Fleetwood Mac dot txt.

167
00:09:38,260 --> 00:09:40,940
So what is the command I can do to view that?

168
00:09:40,960 --> 00:09:45,610
Well, it's going to be get diff something and it's actually it's just get diff.

169
00:09:45,610 --> 00:09:47,200
So get diff on its own.

170
00:09:47,230 --> 00:09:50,560
It's going to show me in this case the UNSTAGED changes.

171
00:09:51,160 --> 00:09:53,740
It's not going to show me the changes that I already staged.

172
00:09:53,740 --> 00:09:54,370
Right.

173
00:09:54,400 --> 00:09:55,270
To do that.

174
00:09:55,270 --> 00:09:56,920
That's the next little bit here.

175
00:09:56,950 --> 00:10:00,190
Run a diff that would reveal only the stage changes.

176
00:10:00,190 --> 00:10:02,900
So I should only see that change we made to queen txt.

177
00:10:03,010 --> 00:10:04,260
I should see my name.

178
00:10:04,270 --> 00:10:05,570
So how do I do that?

179
00:10:05,590 --> 00:10:12,370
Well, it's going to be another git diff, but we need dash dash staged or cached and there we are.

180
00:10:12,370 --> 00:10:20,650
We see cold steel or whatever your name is replacing Adam Lambert and then finally run a diff that prints

181
00:10:20,650 --> 00:10:21,370
all changes.

182
00:10:21,370 --> 00:10:28,540
Both files that we changed the stage file and the unstaged file since the prior commit so we can do

183
00:10:28,540 --> 00:10:30,190
get diff head.

184
00:10:30,220 --> 00:10:34,150
So take the current working directory staged and unstaged changes.

185
00:10:34,150 --> 00:10:36,400
Compare that to the head commit.

186
00:10:36,730 --> 00:10:42,100
So here's what changed in Fleetwood Mac and here's what changed in Queen OC.

187
00:10:42,370 --> 00:10:48,070
So I know this is kind of a tedious exercise, but I had to try and come up with something that you

188
00:10:48,070 --> 00:10:51,970
could follow along with and try and run some diffs on your own and get some practice with the different

189
00:10:51,970 --> 00:10:52,750
commands.

190
00:10:53,680 --> 00:10:58,510
You know, I don't know how successful this was, but I hope you followed along and enjoyed it.

191
00:10:58,870 --> 00:11:02,710
Don't get hung up on this bit around Git clone and how this all works.

192
00:11:02,710 --> 00:11:05,620
We will be spending a lot of time on that later on.

193
00:11:05,980 --> 00:11:11,260
This just enabled me to give you some starter code or files and branches so you could just get going

194
00:11:11,260 --> 00:11:12,040
with the diffs.

195
00:11:12,220 --> 00:11:12,910
All right.

196
00:11:13,150 --> 00:11:13,840
Moving on.

