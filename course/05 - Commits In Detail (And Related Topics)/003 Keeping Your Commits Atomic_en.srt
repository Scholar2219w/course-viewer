1
00:00:00,150 --> 00:00:05,910
One of the more common pieces of advice that many a blog article has been written about is to keep your

2
00:00:05,910 --> 00:00:07,560
commits atomic.

3
00:00:07,710 --> 00:00:08,910
So what does that mean?

4
00:00:08,940 --> 00:00:11,850
So what I want to talk about in this video and I'll show you an example.

5
00:00:11,880 --> 00:00:17,910
In this context, the word atomic does not mean having to do with an atom, but rather of something

6
00:00:17,910 --> 00:00:27,030
being irreducible or of a, I guess a base unit, a single component that makes up a larger system.

7
00:00:27,240 --> 00:00:31,430
So if that doesn't mean anything to you, just read the first paragraph here.

8
00:00:31,440 --> 00:00:37,390
When possible, your commits should encompass a single feature, a single change, a fix.

9
00:00:37,410 --> 00:00:41,250
In other words, try and keep each commit focused on a single thing.

10
00:00:41,460 --> 00:00:45,570
And this is important, especially if you're working with code and you're writing code, you're adding

11
00:00:45,570 --> 00:00:47,220
features or fixing bugs.

12
00:00:47,220 --> 00:00:53,180
It's super important to keep things as atomic as possible, to keep each commit focused on one thing.

13
00:00:53,190 --> 00:00:55,140
Again, that does not mean one file.

14
00:00:55,140 --> 00:00:59,460
That means one feature, one thing that you worked on.

15
00:00:59,460 --> 00:01:01,920
So let me show you an example here.

16
00:01:02,010 --> 00:01:07,830
I've got my first novel repository going still, and I'm going to do two things this morning.

17
00:01:07,860 --> 00:01:13,740
First of all, I'm going to add some inspiration, some visual inspiration.

18
00:01:14,070 --> 00:01:18,600
Since I'm such a, I guess, a budding writer, I want to have a little mood board.

19
00:01:18,600 --> 00:01:25,650
So I've actually downloaded a couple of photos that I want to use, just 1920s esque photos.

20
00:01:26,520 --> 00:01:31,710
This is the best I could find with all the copyright restrictions I have to worry about.

21
00:01:31,710 --> 00:01:34,850
So I'm going to make a new folder in here.

22
00:01:34,860 --> 00:01:36,000
I'll just do it through Finder.

23
00:01:36,000 --> 00:01:41,190
I'll call it Mood Board, and then I'm just going to put those images in there.

24
00:01:42,930 --> 00:01:43,240
Okay.

25
00:01:43,440 --> 00:01:45,420
So now I have that folder in there.

26
00:01:45,840 --> 00:01:50,460
And of course, if I type get status, get is going to tell me, hey, there's a whole new directory

27
00:01:50,460 --> 00:01:53,700
mood board that I see but I'm not tracking.

28
00:01:53,820 --> 00:02:00,480
So I keep working on my, my novel and I decide, you know, I'm not sure if I like the name Gatsby.

29
00:02:00,480 --> 00:02:05,250
I think I want to change Gatsby to be Gatsby with a C.

30
00:02:05,400 --> 00:02:08,520
So I'm going to change that across all my files.

31
00:02:08,520 --> 00:02:09,690
How am I going to do that?

32
00:02:09,690 --> 00:02:11,820
Well, with VW's code, it's super simple.

33
00:02:11,820 --> 00:02:15,960
If I go to this little icon here, there's also a shortcut I can never remember.

34
00:02:15,960 --> 00:02:22,080
I can search for Gatsby and I can replace it across all files.

35
00:02:22,080 --> 00:02:23,850
So it found it in four different files.

36
00:02:24,060 --> 00:02:29,520
The characters file, chapter one, chapter two, the outline, and I'll replace it with Gatsby like

37
00:02:29,520 --> 00:02:30,000
that.

38
00:02:30,000 --> 00:02:34,230
And then I can click this button however you do this if you are following along.

39
00:02:34,230 --> 00:02:36,840
I'm just making a change across a bunch of files.

40
00:02:36,840 --> 00:02:41,130
So it's asking me, are you sure you want to replace 18 occurrences across four files?

41
00:02:41,130 --> 00:02:41,700
Sure.

42
00:02:42,180 --> 00:02:42,810
All right.

43
00:02:42,810 --> 00:02:44,580
So now we see it changed here.

44
00:02:44,730 --> 00:02:48,360
Gatsby and the characters file somewhere in here, I'm sure.

45
00:02:48,360 --> 00:02:49,110
Here we go.

46
00:02:49,230 --> 00:02:50,850
But I looked once more for Gatsby.

47
00:02:50,880 --> 00:02:51,960
He had vanished.

48
00:02:51,960 --> 00:02:55,590
So we can trust that it changed across all of those files.

49
00:02:56,130 --> 00:02:58,650
So now I'm ready to start committing.

50
00:02:58,650 --> 00:03:00,000
It's later in the day.

51
00:03:00,000 --> 00:03:03,600
Or maybe I'm going to take a lunch break so I type get status.

52
00:03:04,380 --> 00:03:06,900
And we have a couple of things, right.

53
00:03:06,900 --> 00:03:12,900
We have four files that have been modified, plus a whole new directory that contains a bunch of files

54
00:03:12,900 --> 00:03:14,790
inside all three image files.

55
00:03:14,970 --> 00:03:21,570
So I'm not just going to add all of this to one single commit that breaks this rule or this pattern

56
00:03:21,600 --> 00:03:24,990
of wanting to keep each commit focused on a single thing.

57
00:03:25,560 --> 00:03:30,990
Here, it's very easy for me to break this up and just say, okay, my first commit the order doesn't

58
00:03:30,990 --> 00:03:36,780
really matter, but one commit I'll make will be around changing Gatsby to Gatsby.

59
00:03:36,780 --> 00:03:39,240
That was one thing that I did.

60
00:03:39,240 --> 00:03:45,660
And then the other commit that I'll make will be around adding to my moodboard or creating my Moodboard.

61
00:03:45,750 --> 00:03:49,350
So why don't I start by just adding chapter one?

62
00:03:50,740 --> 00:03:55,660
And chapter two and the characters and outline.

63
00:03:55,660 --> 00:04:00,550
So notice I did not do get add dots because I don't want the mood board.

64
00:04:01,420 --> 00:04:07,960
So now if I type get status, I've got these four things staged for my next commit and now I'm going

65
00:04:07,960 --> 00:04:08,470
to commit.

66
00:04:08,470 --> 00:04:09,610
So get commit.

67
00:04:09,610 --> 00:04:14,920
And those four files, those four changes, they all had to do with changing Gatsby to Gatsby.

68
00:04:14,920 --> 00:04:23,590
So I'd go with Replace Gatsby or how about rename Gatsby to Gatsby?

69
00:04:25,270 --> 00:04:25,900
OC.

70
00:04:26,750 --> 00:04:32,390
I type get status and we still have some uncommitted changes, some stuff I've worked on that get does

71
00:04:32,390 --> 00:04:33,350
not know about.

72
00:04:33,980 --> 00:04:35,330
It's a whole directory.

73
00:04:35,450 --> 00:04:36,620
So this means.

74
00:04:36,620 --> 00:04:43,010
So if I wanted to, I could add specific files from inside of there, get add mood board slash and then

75
00:04:43,010 --> 00:04:46,190
I could type the name of one of those files like Rolls.

76
00:04:46,220 --> 00:04:48,890
It's a Rolls Royce image, so I could do it that way.

77
00:04:48,890 --> 00:04:53,750
Or I can just add the entire directory like this and I'll just add the entire thing.

78
00:04:54,260 --> 00:04:59,920
Now if I type get status, you can see all three image files have been added.

79
00:04:59,930 --> 00:05:02,960
They are going to be committed whenever I commit, so I'll commit.

80
00:05:02,960 --> 00:05:04,280
Now get commit.

81
00:05:04,580 --> 00:05:10,940
M What should I do about start off or create mood board?

82
00:05:11,490 --> 00:05:12,080
Sure.

83
00:05:12,090 --> 00:05:14,960
Create mood board.

84
00:05:17,290 --> 00:05:18,050
Here we go.

85
00:05:18,070 --> 00:05:24,120
So I just made two separate commits instead of one larger commit following this idea.

86
00:05:24,130 --> 00:05:25,990
Keeping our commits atomic.

87
00:05:26,080 --> 00:05:32,980
Breaking them down into some sort of single irreducible unit or piece instead of having like a multipurpose

88
00:05:32,980 --> 00:05:33,310
commit.

89
00:05:33,310 --> 00:05:35,700
That just includes everything you did at once.

90
00:05:35,710 --> 00:05:38,160
Break it down into smaller pieces.

91
00:05:38,170 --> 00:05:43,450
This matters a lot when you're working on code, especially when you're working with a team of people,

92
00:05:43,450 --> 00:05:46,670
and you may need to undo some of the things that you write.

93
00:05:46,690 --> 00:05:52,930
You may introduce a bug at some point, and if you boiled in a whole bunch of changes into one commit

94
00:05:53,050 --> 00:05:56,320
rolling back, that commit could undo a ton of work.

95
00:05:56,320 --> 00:06:02,890
But if you kept your commits atomic single purpose, then if somebody needs to undo one of them, you

96
00:06:02,890 --> 00:06:04,380
don't lose all that other work.

97
00:06:04,390 --> 00:06:09,250
It also makes your code easier to review if you do or when you do code reviews.

98
00:06:09,400 --> 00:06:10,660
It's just generally a practice.

99
00:06:10,660 --> 00:06:15,520
You want to follow group things together in a way that makes sense, keep things small, but don't just

100
00:06:15,520 --> 00:06:17,470
break them up to be as tiny as possible.

101
00:06:17,470 --> 00:06:19,960
Keep them focused on a single thing.

